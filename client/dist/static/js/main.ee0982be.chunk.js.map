{"version":3,"sources":["queries/queries.js","components/BookDetails.js","components/BookList.js","components/AddBook.js","App.js","index.js"],"names":["getAuthorsQuery","gql","getBooksQuery","addBookMutation","getBookQuery","BookDetails","book","this","props","data","name","genre","author","age","id","books","map","item","key","displayBookDetails","Component","graphql","options","variables","bookId","BookList","state","selected","loading","onClick","e","setState","displayBooks","AddBook","handleChange","target","value","authorId","disabled","authors","mutation","addBook","onSubmit","preventDefault","refetchQueries","query","className","type","onChange","displayAuthors","compose","client","ApolloClient","uri","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee0982be.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\r\n\r\nconst getAuthorsQuery = gql`\r\n  {\r\n    authors {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst getBooksQuery = gql`\r\n  {\r\n    books {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst addBookMutation = gql`\r\n  mutation AddBook($name: String!, $genre: String!, $authorId: ID!) {\r\n    addBook(name: $name, genre: $genre, authorId: $authorId) {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst getBookQuery = gql`\r\n  query($id: ID) {\r\n    book(id: $id) {\r\n      id\r\n      name\r\n      genre\r\n      author {\r\n        id\r\n        name\r\n        age\r\n        books {\r\n          name\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { getAuthorsQuery, getBooksQuery, addBookMutation, getBookQuery };\r\n","import React, { Component } from \"react\";\r\nimport { graphql } from \"react-apollo\";\r\nimport { getBookQuery } from \"../queries/queries\";\r\n\r\nclass BookDetails extends Component {\r\n  displayBookDetails() {\r\n    const { book } = this.props.data;\r\n    if (book) {\r\n      return (\r\n        <div>\r\n          <h2>{book.name}</h2>\r\n          <p>{book.genre}</p>\r\n          <p>{book.author.name}</p>\r\n          <p>{book.author.age}</p>\r\n          <p>Author's Books:</p>\r\n          <ul id=\"other-books\">\r\n            {book.author.books.map(item => {\r\n              return <li key={item.id}>{item.name}</li>;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>No book selected...</div>;\r\n    }\r\n  }\r\n  render() {\r\n    return <div id=\"book-details\">{this.displayBookDetails()}</div>;\r\n  }\r\n}\r\n\r\nexport default graphql(getBookQuery, {\r\n  options: props => {\r\n    return {\r\n      variables: {\r\n        id: props.bookId\r\n      }\r\n    };\r\n  }\r\n})(BookDetails);\r\n","import React, { Component } from \"react\";\r\nimport { graphql } from \"react-apollo\";\r\nimport { getBooksQuery } from \"../queries/queries\";\r\n\r\n//components\r\nimport BookDetails from \"./BookDetails\";\r\n\r\nclass BookList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: null\r\n    };\r\n  }\r\n\r\n  displayBooks() {\r\n    var data = this.props.data;\r\n    // console.log(data);\r\n    if (data.loading) {\r\n      return <div>Loading Books...</div>;\r\n    } else {\r\n      return data.books.map(book => {\r\n        return (\r\n          <li\r\n            key={book.id}\r\n            onClick={e => {\r\n              this.setState({ selected: book.id });\r\n            }}\r\n          >\r\n            {book.name}\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul id=\"book-list\">{this.displayBooks()}</ul>\r\n        <BookDetails bookId={this.state.selected} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default graphql(getBooksQuery)(BookList);\r\n","import React, { Component } from \"react\";\r\nimport { graphql, Mutation } from \"react-apollo\";\r\nimport {\r\n  getAuthorsQuery,\r\n  addBookMutation,\r\n  getBooksQuery\r\n} from \"../queries/queries\";\r\n\r\nimport { compose } from \"redux\";\r\n\r\nclass AddBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      genre: \"\",\r\n      authorId: \"\"\r\n    };\r\n  }\r\n\r\n  displayAuthors() {\r\n    var data = this.props.getAuthorsQuery;\r\n    // console.log(data);\r\n    if (data.loading) {\r\n      return <option disabled>Loading Authors...</option>;\r\n    } else {\r\n      return data.authors.map(author => {\r\n        return (\r\n          <option key={author.id} value={author.id}>\r\n            {author.name}\r\n          </option>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <Mutation mutation={addBookMutation}>\r\n        {addBook => (\r\n          <div>\r\n            <form\r\n              id=\"add-book\"\r\n              onSubmit={e => {\r\n                e.preventDefault();\r\n                addBook({\r\n                  variables: {\r\n                    name: this.state.name,\r\n                    genre: this.state.genre,\r\n                    authorId: this.state.authorId\r\n                  },\r\n                  refetchQueries: [\r\n                    {\r\n                      query: getBooksQuery\r\n                    }\r\n                  ]\r\n                });\r\n              }}\r\n            >\r\n              <h1>Add Book:</h1>\r\n              <div className=\"field\">\r\n                <label>Book name:</label>\r\n                <input type=\"text\" id=\"name\" onChange={this.handleChange} />\r\n              </div>\r\n\r\n              <div className=\"field\">\r\n                <label>Genre:</label>\r\n                <input type=\"text\" id=\"genre\" onChange={this.handleChange} />\r\n              </div>\r\n\r\n              <div className=\"field\">\r\n                <label>Authors:</label>\r\n                <select\r\n                  onChange={e => {\r\n                    this.setState({ authorId: e.target.value });\r\n                  }}\r\n                >\r\n                  <option>Select Author</option>\r\n                  {this.displayAuthors()}\r\n                </select>\r\n              </div>\r\n\r\n              <button>Submit</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getAuthorsQuery, { name: \"getAuthorsQuery\" }),\r\n  graphql(addBookMutation, { name: \"addBookMutation\" })\r\n)(AddBook);\r\n","import React, { Component } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\n// Components\nimport BookList from \"./components/BookList\";\nimport AddBook from \"./components/AddBook\";\n\n//apollo client setup\nconst client = new ApolloClient({\n  uri: \"https://express-mongo-server.herokuapp.com/graphql\"\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <div id=\"main\">\n          <h1>Abu's Reading List</h1>\n          <BookList />\n          <AddBook />\n        </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}